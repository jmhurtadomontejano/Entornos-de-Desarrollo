/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hurtado_juanmiguel_eval2;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author usutarde
 */
public class VentanaCiudadanos extends javax.swing.JFrame {

    //VARIABLES DE LA CLASE VENTANACIUDADANOS
    private String nombre;
    private double sueldo;
    private int nhijos;
    private Ciudadano ciudadanoSeleccionado;
    private DefaultListModel dlmCiudadanos;
    private DefaultListModel dlmCiudadanosPremiados;

    /**
     * Creates new form VentanaCiudadanos
     */
    public VentanaCiudadanos() {
        initComponents();
        dlmCiudadanos = new DefaultListModel();
        lst_ciudadanos.setModel(dlmCiudadanos);
        dlmCiudadanosPremiados = new DefaultListModel();
        lst_ciudadanos_premiados.setModel(dlmCiudadanosPremiados);
        lst_ciudadanos.addListSelectionListener(new ListSelectionListener() {
            /**
             * al hacer listener hay un error. he añadido todos los sout para
             * intentar localizar el fallo
             */
            @Override
            public void valueChanged(ListSelectionEvent e) {
                System.out.println("Entrando al Listener porque ha cambiado el ciudadano seleccionado");
                if (lst_ciudadanos.getSelectedIndex() >= 0) {
                    Ciudadano ciudadanoauxiliar = (Ciudadano) dlmCiudadanos.get(lst_ciudadanos.getSelectedIndex());
                    ciudadanoSeleccionado = ciudadanoauxiliar;
                    System.out.println("ciudadanoauxiliar creado: " + ciudadanoauxiliar.getNombre() + ", listo para operar con el ciudadano seleccionado");
                    txf_nombre.setText(ciudadanoauxiliar.getNombre());
                    System.out.println("Igualada casilla Nombre a GetNombre del ciudadanoauxiliar: " + ciudadanoauxiliar.getNombre());
                    txf_sueldo.setText("" + ciudadanoauxiliar.getSueldo());
                    System.out.println("Igualada casilla Sueldo a GetSueldo del ciudadanoauxiliar: " + ciudadanoauxiliar.getSueldo());
                    txf_nhijos.setText("" + ciudadanoauxiliar.getNhijos());
                    System.out.println("Igualada casilla Nhijos a GetNhijos del ciudadanoauxiliar: " + ciudadanoauxiliar.getNhijos());
                    lst_ciudadanos.updateUI();
                    System.out.println("Interfaz lst_ciudadanos actualizada después de seleccionar un nuevo ciudadano");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txf_nombre = new javax.swing.JTextField();
        txf_sueldo = new javax.swing.JTextField();
        txf_nhijos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_ciudadanos = new javax.swing.JList<>();
        btn_agregarCiudadano = new javax.swing.JButton();
        btn_importarCiudadanos = new javax.swing.JButton();
        btn_ordenarHijos = new javax.swing.JButton();
        btn_calcularAyudas = new javax.swing.JButton();
        txf_ayudas = new javax.swing.JTextField();
        btn_premiarSeleccionado = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_ciudadanos_premiados = new javax.swing.JList<>();
        btn_evaluarCiudadanos = new javax.swing.JButton();
        txf_evaluarCiudadanos = new javax.swing.JTextField();
        txf_evaluarCiudadanosEvadidos = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("VENTANA GESTIÓN CIUDADANOS");

        txf_sueldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txf_sueldoActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre:");

        jLabel3.setText("Sueldo:");

        jLabel4.setText("Nº Hijos:");

        lst_ciudadanos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lst_ciudadanos);

        btn_agregarCiudadano.setText("Agregar Ciudadano");
        btn_agregarCiudadano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarCiudadanoActionPerformed(evt);
            }
        });

        btn_importarCiudadanos.setText("Importar Ciudadanos");
        btn_importarCiudadanos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_importarCiudadanosActionPerformed(evt);
            }
        });

        btn_ordenarHijos.setText("Ordenar por hijos");
        btn_ordenarHijos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ordenarHijosActionPerformed(evt);
            }
        });

        btn_calcularAyudas.setText("Calcular Ayudas");
        btn_calcularAyudas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calcularAyudasActionPerformed(evt);
            }
        });

        btn_premiarSeleccionado.setText("Premiar Seleccionado");
        btn_premiarSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_premiarSeleccionadoActionPerformed(evt);
            }
        });

        lst_ciudadanos_premiados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lst_ciudadanos_premiados);

        btn_evaluarCiudadanos.setText("Evaluar Ciudadania");
        btn_evaluarCiudadanos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_evaluarCiudadanosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(23, 23, 23))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txf_nombre)
                            .addComponent(txf_sueldo)
                            .addComponent(txf_nhijos, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_importarCiudadanos)
                            .addComponent(btn_agregarCiudadano))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_premiarSeleccionado)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_ordenarHijos)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_calcularAyudas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txf_ayudas, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_evaluarCiudadanos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txf_evaluarCiudadanosEvadidos, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txf_evaluarCiudadanos, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(325, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txf_sueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txf_nhijos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_agregarCiudadano))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_premiarSeleccionado)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_importarCiudadanos)
                    .addComponent(btn_ordenarHijos))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_calcularAyudas)
                    .addComponent(txf_ayudas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_evaluarCiudadanos)
                    .addComponent(txf_evaluarCiudadanos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(txf_evaluarCiudadanosEvadidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_agregarCiudadanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarCiudadanoActionPerformed
        // TODO add your handling code here:
        String nombre = txf_nombre.getText();
        double sueldo = Double.parseDouble(txf_sueldo.getText());
        int nhijos = Integer.parseInt(txf_nhijos.getText());
        System.out.println("voy a mandar construir el ciudadano");
        Ciudadano c = new Ciudadano(nombre, sueldo, nhijos);
        System.out.println("Ciudadano Creado");
        dlmCiudadanos.addElement(c);
        lst_ciudadanos.updateUI();
    }//GEN-LAST:event_btn_agregarCiudadanoActionPerformed

    private void txf_sueldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txf_sueldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txf_sueldoActionPerformed

    private void btn_importarCiudadanosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_importarCiudadanosActionPerformed
        File f = new File("CIUDADANOS.txt");
        FileReader fr;
        String linea = null, nombre, nombreimportado, sueldoimportado, nhijosimportado;
        double sueldo;
        int nhijos;
        int contador_lineas = 0;
        try {
            fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            while ((linea = br.readLine()) != null) {//hasta que linea sea distinto de null
                if (linea.length() == 0) {//Esto lo hacemos para discriminar lineas vacias, que sean iguales a 0 trozos
                    System.out.println("Linea descartada en la lectura de archivo CIUDADANOS.TXT, línea número: " + contador_lineas + ", contenido: " + linea.toString());
                    linea = null;
                } else {
                    String[] trozos = linea.split(";");// Declaro un Array de Strings de nombre trozos y le indico el parametro de separación entre trozos :
                    nombre = trozos[0].substring(trozos[0].indexOf(":") + 1);//igualo la variable nombre al dato del trozo 0, a partir de los :   el +1 es para saltar los 2 puntos
                    sueldo = Double.parseDouble(trozos[1].substring(trozos[1].indexOf(":") + 1));//igualo la variable sueldo al trozo 1, subtrozo 1, a partir de los : el +1 es para saltar los 2 puntos
                    nhijos = Integer.parseInt(trozos[2].substring(trozos[2].indexOf(":") + 1));//el +1 es para saltar los 2 puntos
                    Ciudadano c = new Ciudadano(nombre, sueldo, nhijos);//
                    dlmCiudadanos.addElement(c);
                }//cierre del while   
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_btn_importarCiudadanosActionPerformed

    private void btn_ordenarHijosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ordenarHijosActionPerformed
        // TODO add your handling code here:
        Object[] arrayCiudadanos;
        arrayCiudadanos = dlmCiudadanos.toArray();

        Arrays.sort(arrayCiudadanos, new ComparadorPorHijos());
        dlmCiudadanos.clear();
        for (Object ciu : arrayCiudadanos) {
            dlmCiudadanos.addElement(ciu);
        }
        lst_ciudadanos.updateUI();
    }//GEN-LAST:event_btn_ordenarHijosActionPerformed

    private void btn_calcularAyudasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcularAyudasActionPerformed
        // TODO add your handling code here:
        int sumahijos = 0;

        for (int i = 0; i < dlmCiudadanos.size(); i++) {
            Ciudadano ciudadanoaux = (Ciudadano) dlmCiudadanos.get(i);
            sumahijos = sumahijos + ciudadanoaux.getNhijos();
            // System.out.println("El numero de hijos hasta ahora es" + sumahijos);
        }
        int totalayuda = sumahijos * 100;
        txf_ayudas.setText("El total de hijos suman: " + sumahijos + " y el importe sería: " + totalayuda);
    }//GEN-LAST:event_btn_calcularAyudasActionPerformed

    private void btn_premiarSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_premiarSeleccionadoActionPerformed
        // TODO add your handling code here:
        File f = new File("CIUDADANOS EVASORES.txt");// creo la variable de tipo File con nombre f y le cargo el archivo que quiero leer CIUDADANOS EVASORES.TXT
        FileReader fr = null;//Inicializo variable de tipo Filereader con nombre fr y la igualo a null
        String linea;//creo la variable de Tipo String y nombre linea, el objetivo es guardar cada línea en esta variable
        double ctd_evadida;//creo la variable double para la cantidad evadida
        boolean encontrado = false;//declaro una variable boleana falsa, de nombre encontrado, para el caso en que el premiado sea defraudador, igualarla a true.
        //String[] ctd_evadida, nombre;
        //ArrayList <String> ciudadanosEvasores = new ArrayList<>();

        try {
            fr = new FileReader(f);//cargo en la variable fr, la variable File f que ya contenia el archivo de ciudadanos evasores
            BufferedReader br = new BufferedReader(fr);//creo una nueva variable de tipo BufferedReader con nombre br y la igualo a la variable fr, que contiene el archivo de CIUDADANOS EVASORES

            while ((linea = br.readLine()) != null && !encontrado) {//Mientras la linea a la lectura de br.readline sea distinta de nulo O (&&) distinto! de encontrado 
                String lineas[] = linea.split(";");//creo un Array de String de nomrbe lineas y lo relleno con los trozos de línea. Cada trozo es hasta que encuentra ;
                if (ciudadanoSeleccionado.getNombre().equals(lineas[0].substring(lineas[0].indexOf(":") + 1))) {//si ciudadanoseleccionado.getnombre() es igual al subtrozo 0 (NOMBRE:XXXXX) de la línea 0, a partir de los : que es el separador que viene en el archivo. +1 para que no tenga en cuenta los 2 puntos
                    encontrado = true;//si lo encuentra, igualo la variable a true y por tanto el while deja de cumplirse y sale del bucle.
                    //ctd_evadida=Double.parseDouble(lineas[1].substring(lineas[1].indexOf(":"))); Me gustaria poder leer la cantidad defraudada, pero no lo he conseguido.
                    System.out.println("Ciudadano DEFRAUDADOR Encontrado: " + ciudadanoSeleccionado.getNombre()); // + ", cantidad evadida: " +ctd_evadida);
                }
            }

        } catch (IOException ex) {//si falla en algun momento, recojo la excepcion en el catch con la clase IOException
            System.out.println(ex.getMessage());//muestro el mensaje de error que me devuelva
        }

        if (!encontrado) {//si no! encontramos al defraudador
            ciudadanoSeleccionado.setSueldo(ciudadanoSeleccionado.getSueldo() + 1000);//al ciudadanoseleccionado le subimos el sueldo con el método set sueldo, la cantidad fija de 1000€;
            if (!dlmCiudadanosPremiados.contains(ciudadanoSeleccionado)) {//si no! contiene el dlmCiudadanosPremiados al ciudadanos seleccionado
                dlmCiudadanosPremiados.addElement(ciudadanoSeleccionado);//entonces añado al dlmCiudadanosPremiados el elemento CiudadanoSeleccionado
            }

            lst_ciudadanos_premiados.updateUI();//actualizo listado de ciudadanos premiados
            lst_ciudadanos.updateUI();//actualizo listado de ciudadanos (para reflejar la actualización del sueldo)
            txf_sueldo.setText("" + ciudadanoSeleccionado.getSueldo());//actualizo el importe de la casilla sueldo del ciudadano seleccionado.
            System.out.println("Ciudadano: " + ciudadanoSeleccionado.getNombre() + ", Sueldo incluyendo el premio de  1000€: " + ciudadanoSeleccionado.getSueldo() + ", numero de indice de ciudadano: " + lst_ciudadanos.getSelectedIndex());
        }


    }//GEN-LAST:event_btn_premiarSeleccionadoActionPerformed

    private void btn_evaluarCiudadanosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_evaluarCiudadanosActionPerformed
        File f = new File("CIUDADANOS EVASORES.txt");// creo la variable de tipo File con nombre f y le cargo el archivo que quiero leer CIUDADANOS EVASORES.TXT
        FileReader fr = null;//Inicializo variable de tipo Filereader con nombre fr y la igualo a null
        String linea;//creo la variable de Tipo String y nombre linea, el objetivo es guardar cada línea en esta variable
        long cantidadEvadidaTodos = 0;// declaro variable de tipo long y nombre catidadEvadidatodos para sumar los importes evadidos
        int contador_lineas = 0;//delcaro variable de tipo int con nombre Contador_lineas porque me interesa seguir la lectura del fichero y las lineas que me dan fallos
        ArrayList<Evasor> ciudadanosEvasores = new ArrayList<>();//declaro un ArrayList de clase Evasor y de nombre ciudadanos Evasores
        ArrayList<Ciudadano> ciudadanos = new ArrayList<>();//declaro un ArrayList de clase Ciudadano y nombre ciudadanos
        try {
            fr = new FileReader(f);//cargo en la variable fr, la variable File f que ya contenia el archivo de ciudadanos evasores
            BufferedReader br = new BufferedReader(fr);//creo una nueva variable de tipo BufferedReader con nombre br y la igualo a la variable fr, que contiene el archivo de CIUDADANOS EVASORES

            while ((linea = br.readLine()) != null) {//Mientras la linea a la lectura de br.readline sea distinta de nulo 
                contador_lineas++;//incremento el contador de lineas
                Evasor evasorAux = new Evasor();//declaro un nuevo Objeto de clase Evasor y nombre evasorAux
                String lineas[] = linea.split(";");//Creo un Array de Strings llamado lineas y le indico que su sepración será por ;
                if (lineas.length == 2) {//si la línea tiene 2 separaciones, es del tipo que queremos leer y entonces la procesamos, sino pasa al else
                    evasorAux.setNombre(lineas[0].substring(lineas[0].indexOf(":") + 1));
                    String cantidadEvadida = lineas[1].substring(lineas[1].indexOf(":") + 1);
                    evasorAux.setCantidad_evadida(Long.parseLong(cantidadEvadida.substring(0, cantidadEvadida.indexOf("."))));
                    ciudadanosEvasores.add(evasorAux);
                    cantidadEvadidaTodos += evasorAux.getCantidad_evadida();
                } else {
                    System.out.println("Linea rechazada, número: " + contador_lineas + ", contenido: " + linea.toString());
                }
            }
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }

        for (int i = 0; i < dlmCiudadanos.size(); i++) {
            ciudadanos.add((Ciudadano) dlmCiudadanos.get(i));
        }

        try {
            if (evaluarCiudadanos(ciudadanos, ciudadanosEvasores) > dlmCiudadanosPremiados.getSize()) {
                throw new ElPuebloEvasor("Numero de evasores: " + ciudadanosEvasores.size()
                        + " cantidad evadida: " + cantidadEvadidaTodos);
            }
        } catch (ElPuebloEvasor ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_evaluarCiudadanosActionPerformed

    private int evaluarCiudadanos(ArrayList listaCiudadanos, ArrayList listaEvasores) {
        txf_evaluarCiudadanos.setText("" + listaCiudadanos.size());
        txf_evaluarCiudadanosEvadidos.setText("" + listaEvasores.size());

        return listaCiudadanos.size() - listaEvasores.size();

    }

    public void CalcularAyudasPorHijos() {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudadanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudadanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudadanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudadanos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCiudadanos().setVisible(true);
            }
        });
    }

    public double calcularAyudasPorHijos(ArrayList lista) {
        return 0;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregarCiudadano;
    private javax.swing.JButton btn_calcularAyudas;
    private javax.swing.JButton btn_evaluarCiudadanos;
    private javax.swing.JButton btn_importarCiudadanos;
    private javax.swing.JButton btn_ordenarHijos;
    private javax.swing.JButton btn_premiarSeleccionado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lst_ciudadanos;
    private javax.swing.JList<String> lst_ciudadanos_premiados;
    private javax.swing.JTextField txf_ayudas;
    private javax.swing.JTextField txf_evaluarCiudadanos;
    private javax.swing.JTextField txf_evaluarCiudadanosEvadidos;
    private javax.swing.JTextField txf_nhijos;
    private javax.swing.JTextField txf_nombre;
    private javax.swing.JTextField txf_sueldo;
    // End of variables declaration//GEN-END:variables
}
